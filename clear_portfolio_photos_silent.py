#!/usr/bin/env python3
"""
–¢–∏—Ö–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—è portfolio_photo –≤ —Ç–∞–±–ª–∏—Ü–µ workers.
–ë–µ–∑ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.
"""

import os
import sqlite3
import shutil
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('clear_portfolio_silent.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

def clear_portfolio_photos_silent():
    """–¢–∏—Ö–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è portfolio_photo –¥–ª—è –≤—Å–µ—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π"""
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = 'app/data/database/database.db'
    if not os.path.exists(db_path):
        logger.error(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    backup_path = f'{db_path}.backup_{timestamp}'
    
    try:
        shutil.copy2(db_path, backup_path)
        logger.info(f"–°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {e}")
        return False
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π —Å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
        cursor.execute("SELECT COUNT(*) FROM workers WHERE portfolio_photo IS NOT NULL AND portfolio_photo != ''")
        workers_with_portfolio = cursor.fetchone()[0]
        
        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {workers_with_portfolio} –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π —Å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ")
        
        if workers_with_portfolio == 0:
            logger.info("–ù–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π —Å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")
            return True
        
        # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ portfolio_photo –¥–ª—è –≤—Å–µ—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
        cursor.execute("UPDATE workers SET portfolio_photo = NULL")
        affected_rows = cursor.rowcount
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        
        logger.info(f"[SUCCESS] –ü–æ–ª–µ portfolio_photo –æ—á–∏—â–µ–Ω–æ –¥–ª—è {affected_rows} –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("SELECT COUNT(*) FROM workers WHERE portfolio_photo IS NOT NULL AND portfolio_photo != ''")
        remaining_portfolios = cursor.fetchone()[0]
        
        if remaining_portfolios == 0:
            logger.info("[SUCCESS] –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ - –≤—Å–µ –ø–æ–ª—è portfolio_photo —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ NULL")
        else:
            logger.warning(f"‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å {remaining_portfolios} –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π —Å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ")
        
        return True
        
    except Exception as e:
        logger.error(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ: {e}")
        conn.rollback()
        return False
    finally:
        conn.close()

if __name__ == "__main__":
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–∏—Ö–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ...")
    
    success = clear_portfolio_photos_silent()
    
    if success:
        logger.info("[SUCCESS] –û—á–∏—Å—Ç–∫–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        logger.info("[INFO] –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –±—É–¥—É—Ç –∑–∞–Ω–æ–≤–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ")
    else:
        logger.error("[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ!")
        exit(1)
